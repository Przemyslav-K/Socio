App\Entity\User:
  attributes:
    normalization_context:
      groups:
        - 'read:user'
    denormalization_context:
      groups:
        - 'write:user'
  collectionOperations:
    get:
      normalization_context:
        groups:
          - 'read:user'
    post:
      denormalization_context:
        groups:
          - 'insert:user'
    me:
      path: /users/me
      method: GET
      controller: App\Controller\User\MeController
      normalization_context:
        groups:
          - 'read:user:self'
  itemOperations:
    get:
      normalization_context:
        groups:
          - 'read:user'
    put:
      denormalization_context:
        groups:
          - 'update:user'
    delete:
      denormalization_context:
        groups:
          - 'delete:user'
    upload_picture:
      method: POST
      controller: App\Controller\User\UploadProfilerPictureController
      denormalization_context:
        groups:
          - 'write:user'
    break_friend_relation:
      security: 'is_granted("BREAK_FRIEND_RELATION", object)'
      path: '/users/{id}/break-friend-relation'
      method: POST
      controller: App\Controller\Relation\BreakFriendRelationController
      requirements:
        id: \d+
    accept_friend_relation:
      security: 'is_granted("ACCEPT_FRIEND_RELATION", object)'
      path: '/users/{id}/accept-friend-relation'
      method: POST
      controller: App\Controller\Relation\AcceptFriendRelationController
      requirements:
        id: \d+
    request_friend_relation:
      security: 'is_granted("REQUEST_FRIEND_RELATION", object)'
      path: '/users/{id}/request-friend-relation'
      method: POST
      controller: App\Controller\Relation\RequestFriendRelationController
      requirements:
        id: \d+
    break_mother_relation:
      security: 'is_granted("BREAK_MOTHER_RELATION", object)'
      path: '/users/{id}/break-mother-relation'
      method: POST
      controller: App\Controller\Relation\BreakMotherRelationController
      requirements:
        id: \d+
    accept_mother_relation:
      security: 'is_granted("ACCEPT_MOTHER_RELATION", object)'
      path: '/users/{id}/accept-mother-relation'
      method: POST
      controller: App\Controller\Relation\AcceptMotherRelationController
      requirements:
        id: \d+
    request_mother_relation:
      security: 'is_granted("REQUEST_MOTHER_RELATION", object)'
      path: '/users/{id}/request-mother-relation'
      method: POST
      controller: App\Controller\Relation\RequestMotherRelationController
      requirements:
        id: \d+
    break_father_relation:
      security: 'is_granted("BREAK_FATHER_RELATION", object)'
      path: '/users/{id}/break-father-relation'
      method: POST
      controller: App\Controller\Relation\BreakFatherRelationController
      requirements:
        id: \d+
    accept_father_relation:
      security: 'is_granted("ACCEPT_FATHER_RELATION", object)'
      path: '/users/{id}/accept-father-relation'
      method: POST
      controller: App\Controller\Relation\AcceptFatherRelationController
      requirements:
        id: \d+
    request_father_relation:
      security: 'is_granted("REQUEST_FATHER_RELATION", object)'
      path: '/users/{id}/request-father-relation'
      method: POST
      controller: App\Controller\Relation\RequestFatherRelationController
      requirements:
        id: \d+
