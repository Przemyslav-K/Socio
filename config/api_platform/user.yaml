App\Entity\User:
  attributes:
    normalization_context:
      groups: ['read:user']
    denormalization_context:
      groups: ['write:user']
  collectionOperations:
    get:
      normalization_context:
        groups: ['read:user']
    post:
      denormalization_context:
        groups: ['insert:user']
    me:
      path: /users/me
      method: GET
      controller: App\Controller\User\MeController
      normalization_context:
        groups: ['read:user:self']
  itemOperations:
    get:
      normalization_context:
        groups: ['read:user']
    put:
      denormalization_context:
        groups: ['update:user']
    delete:
      denormalization_context:
        groups: ['delete:user']
    request_friend:
      security: 'is_granted("REQUEST_FRIENDSHIP_USER", object)'
      path: /users/{id}/request-friendship
      method: POST
      controller: App\Controller\User\RequestFriendshipController
      requirements:
        id: \d+
    accept_friend:
      security: 'is_granted("ACCEPT_FRIENDSHIP_USER", object)'
      path: /users/{id}/accept-friendship
      method: POST
      controller: App\Controller\Relation\AcceptFriendshipController
      requirements:
        id: \d+
    break_friendship:
      security: 'is_granted("BREAK_FRIENDSHIP_USER", object)'
      path: /users/{id}/break-friendship
      method: POST
      controller: App\Controller\Relation\BreakFriendshipController
      requirements:
        id: \d+